@model PrivateChatViewModel

<style>
    body {
        margin-top: 20px;
    }

    .img-circle {
        border-radius: 50%
    }

    .img-sm {
        width: 46px;
        height: 46px;
    }

    .chat-online {
        color: #34ce57
    }

    .chat-offline {
        color: #e4606d
    }

    .chat-messages {
        display: flex;
        flex-direction: column;
        max-height: 800px;
        overflow-y: scroll
    }

    .chat-message-left,
    .chat-message-right {
        display: flex;
        flex-shrink: 0
    }

    .chat-message-left {
        margin-right: auto
    }

    .chat-message-right {
        flex-direction: row-reverse;
        margin-left: auto
    }

    .py-3 {
        padding-top: 1rem !important;
        padding-bottom: 1rem !important;
    }

    .px-4 {
        padding-right: 1.5rem !important;
        padding-left: 1.5rem !important;
    }

    .flex-grow-0 {
        flex-grow: 0 !important;
    }

    .border-top {
        border-top: 1px solid #dee2e6 !important;
    }

    input[type="file"] {
        display: none;
    }
</style>

<div class="container p-0">

    <h1 class="h3 mb-3">Messages</h1>

    <div class="card">
        <div class="row g-0">
            <div class="container-fluid">
                <div class="py-2 px-4 border-bottom d-none d-lg-block">
                    <h3 id="group-name" style="text-align:center" hidden>@Model.GroupName</h3>
                    <div class="d-flex align-items-center py-1">
                        <div class="position-relative">
                            <img src="~/img/NoAvatarProfileImage.png" class="rounded-circle mr-1 img-sm" alt="avatar">
                        </div>
                        <div class="flex-grow-1 pl-3">
                            <strong id="receiver-fullname">@Model.ReceiverFullName</strong>
                            <h3 id="receiver" style="text-align:center" hidden>@Model.ReceiverEmail</h3>
                        </div>
                        <div>
                            <h6 class="m-b-0" id="sender-fullname">@Model.SenderFullName</h6>
                            <h3 id="sender" style="text-align:center" hidden>@Model.SenderEmail</h3>
                            <label class="btn btn-outline-secondary" for="upload-image" style="cursor:pointer"><i class="fa fa-camera"></i></label>
                            <input accept=".jpg, .jpeg, .png" type="file" multiple id="upload-image" class="btn btn-outline-secondary">
                            <label class="btn btn-outline-primary" for="upload-file" style="cursor:pointer"><i class="fa fa-paperclip"></i></label>
                            <input accept=".zip, .rar, .docx, .xlsx, application/msword, application/vnd.ms-excel, application/vnd.ms-powerpoint, text/plain, application/pdf" type="file" multiple id="upload-file">
                        </div>
                    </div>
                </div>

                <div class="position-relative">
                    <div onclick="scrollChatToBottom()" class="back-to-bottom-chat-body" id="scrollBottomButton">
                        <i class="fas fa-chevron-down"></i>
                    </div>
                    <div class="chat-messages p-4" id="chat-body">
                        <ul class="list-unstyled media-block" id="message-list">
                            @if (Model.ChatMessages != null && Model.ChatMessages.Count > 0)
                            {
                                @foreach (var message in Model.ChatMessages)
                                {
                                    @if (message.Receiver.Id == Model.ToUser.Id && Model.FromUser.Id != message.Sender.Id)
                                    {
                                        <li class="chat-message-left pb-4" id="@message.Id">
                                            <div>
                                                <img src="~/img/NoAvatarProfileImage.png" class="rounded-circle mr-1 img-sm" alt="Avatar">
                                                <div class="text-muted small text-nowrap mt-2">@message.CreatedOn</div>
                                            </div>
                                            <div class="flex-shrink-1 bg-light rounded py-2 px-3 ml-3">
                                                <div class="font-weight-bold mb-1">@Model.ReceiverFullName</div>
                                                @Html.Raw(message.Content)
                                            </div>
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="chat-message-right pb-4" id="@message.Id">
                                            <div>
                                                <img src="~/img/NoAvatarProfileImage.png" class="rounded-circle mr-1 img-sm" alt="Avatar">
                                                <div class="text-muted small text-nowrap mt-2">@message.CreatedOn</div>
                                            </div>
                                            <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                                <div class="font-weight-bold mb-1">@Model.SenderFullName</div>
                                                @Html.Raw(message.Content)
                                            </div>
                                        </li>
                                    }
                                }
                            }
                        </ul>
                        <input id="messagesSkipCount" type="hidden" value="@this.Model.ChatMessages.Count" />
                    </div>
                </div>
                <div class="flex-grow-0 py-3 px-4 border-top">
                    <div class="input-group">
                        <input type="text" class="form-control" id="chat-text" placeholder="Напиши съобщение..">
                        <button class="btn btn-primary hvr-grow" id="send-button">Изпрати</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
<script type="text/javascript">
    'use strict';

    var connection = new signalR.HubConnectionBuilder()
    .withUrl('/chatHub')
    .configureLogging(signalR.LogLevel.Debug)
    .build();

    const sendButton = document.getElementById('send-button');
    //Disable send button until connection is established
    sendButton.disabled = true;

    connection.on('ReceiveMessage', function (user, message, userFullName, image = '') {
        var msg = message;
        let dateTime = new Date();
        let formattedDate = dateTime.toLocaleString('bg-BG');

        var li = document.createElement('li');

        li.classList.add('chat-message-left', 'pb-4');
        li.innerHTML = `<div>
                               <img src="~/img/NoAvatarProfileImage.png" class="rounded-circle mr-1 img-sm" alt="Avatar">
                               <div class="text-muted small text-nowrap mt-2">${formattedDate}</div>
                                            </div>
                               <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                               <div class="font-weight-bold mb-1">${user}</div>
                               ${msg}
                        </div>`;

        document.getElementById('message-list').appendChild(li);

        updateScroll();
        let oldCount = parseInt(document.getElementById('messagesSkipCount').value)
        document.getElementById('messagesSkipCount').value = oldCount + 1;
    });

    connection.on('SendMessage', function (user, message, userFullName, image = '') {
        var msg = message;
        let dateTime = new Date()
        let formattedDate = dateTime.toLocaleString('bg-BG');

        var li = document.createElement("li");

        li.classList.add('chat-message-right', 'pb-4');
        li.innerHTML = `<div>
                               <img src="~/img/NoAvatarProfileImage.png" class="rounded-circle mr-1 img-sm" alt="Avatar">
                               <div class="text-muted small text-nowrap mt-2">${formattedDate}</div>
                                            </div>
                               <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                               <div class="font-weight-bold mb-1">${user}</div>
                               ${msg}
                        </div>`;

        document.getElementById('message-list').appendChild(li);

        updateScroll();
        let oldCount = parseInt(document.getElementById('messagesSkipCount').value)
        document.getElementById('messagesSkipCount').value = oldCount + 1;
    });

    connection.start().then(function () {
        sendButton.disabled = false;
        var toUser = document.getElementById('receiver').textContent;
        var fromUser = document.getElementById('sender').textContent;
        var senderFullName = document.getElementById('sender-fullname').textContent;
        var group = document.getElementById('group-name').textContent;

        connection.invoke('AddToGroup', `${group}`, toUser, fromUser, senderFullName).catch(function (err) {
            return console.error(err.message.toString());
        });

        connection.invoke('UpdateMessageNotifications', toUser, fromUser).catch(function (err) {
            return console.error(err.toString());
        });
    }).catch(function (err) {
        return console.error(err.toString());
    });

    sendButton.addEventListener('click', function (event) {
        let toUser = document.getElementById('receiver').textContent;
        let fromUser = document.getElementById('sender').textContent;
        let senderFullName = document.getElementById('sender-fullname').textContent;
        let message = document.getElementById('chat-text').value;
        let group = document.getElementById('group-name').textContent;
        let images = document.getElementById('upload-image').files;
        let files = document.getElementById('upload-file').files;
        let data = new FormData();

        for (var i = 0; i < images.length; i++) {
            data.append('files', images[i]);
        }

        for (var i = 0; i < files.length; i++) {
            data.append('files', files[i]);
        }

        if (message && images.length == 0 && files.length == 0) {
            connection.invoke('SendMessage', fromUser, toUser, message, group, senderFullName).catch(function (err) {
                return console.error(err.toString());
            });

            connection.invoke('ReceiveMessage', fromUser, message, group, senderFullName).catch(function (err) {
                return console.error(err.toString());
            });

            document.getElementById('chat-text').value = '';
        } else {
            data.append('toUsername', toUser);
            data.append('fromUsername', fromUser);
            data.append('group', group);
            data.append('message', message);

            if (images.length > 0 || files.length > 0) {

                $.ajax({
                    url: `/Chat/With/${toUser}/Group/${group}/SendFiles`,
                    processData: false,
                    contentType: false,
                    type: 'POST',
                    data: data,
                    success: function (result) {
                        if (result.haveImages) {
                            document.getElementById('upload-image').disabled = false;
                        }

                        if (result.haveFiles) {
                            document.getElementById('upload-file').disabled = false;
                        }
                    },
                    error: function (err) {
                        console.log(err.statusText);
                    }
                });

                document.getElementById('upload-image').value = '';
                document.getElementById('upload-file').value = '';
            }
        }

        document.getElementById('chat-text').innerHTML = '';
        $('#chat-text').css('padding-left', '10px');
        event.preventDefault();
        console.log('here');
    });

    function updateInputScroller() {
        let scroller = document.getElementById('chat-text');
        scroller.scrollTop = scroller.scrollHeight;
    }

    function updateScroll() {
    if (document.getElementById('scrollBottomButton').style.visibility != "visible") {
        let element = document.getElementById('chat-body');
        element.scrollTop = element.scrollHeight;
        }
    }
</script>

<script>
        $(document).ready(function () {
        $('#chat-body').scroll(function () {
            let scrollHeight = document.getElementById('chat-body').scrollHeight;
            let scrollDistanceToTop = document.getElementById('chat-body').scrollTop;
            let chatBoyHeight = document.getElementById('chat-body').offsetHeight;
            let distanceToBottom = scrollHeight - scrollDistanceToTop - chatBoyHeight;

            if (distanceToBottom > 400) {
                document.getElementById('scrollBottomButton').style.visibility = 'visible';
            } else if (distanceToBottom >= 0 && distanceToBottom <= 100) {
                document.getElementById('scrollBottomButton').style.visibility = 'hidden';
            }

            if ($('#chat-body').scrollTop() == 0) {
                let messagesSkipCount = document.getElementById('messagesSkipCount').value;
                let username = document.getElementById('receiver').textContent;
                let usernameFullname = document.getElementById('receiver-fullname').textContent;
                let group = document.getElementById('group-name').textContent;

                if (messagesSkipCount && username && group) {
                    $.ajax({
                        type: 'GET',
                        url: `/Chat/With/${username}/Group/${group}/LoadMoreMessages/${messagesSkipCount}`,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        data: {
                            'username': usernameFullname,
                            'group': group,
                            'messagesSkipCount': messagesSkipCount
                        },
                        headers: {
                            RequestVerificationToken:
                                $('input:hidden[name="__RequestVerificationToken"]').val()
                        },
                        success: function (data) {
                            if (data.length > 0) {
                                let oldCount = parseInt(document.getElementById('messagesSkipCount').value)
                                document.getElementById('messagesSkipCount').value = oldCount + data.length;
                                let oldScrollHeight = document.getElementById('chat-body').scrollHeight;

                                for (var message of data) {
                                    let newMessage = document.createElement("li");
                                    newMessage.id = message.id;
                                    if (message.fromUsername == message.currentUsername) {
                                    newMessage.classList.add('chat-message-right', 'pb-4');
                                        newMessage.innerHTML += `
                                        <div>
                                            <img src="~/img/NoAvatarProfileImage.png" class="rounded-circle mr-1 img-sm" alt="Avatar">
                                            <div class="text-muted small text-nowrap mt-2">${message.sendedOn}</div>
                                        </div>
                                        <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                            <div class="font-weight-bold mb-1">${message.fromUsername}</div>
                                            ${message.content}
                                        </div>`;
                                    } else {
                                        newMessage.classList.add('chat-message-left', 'pb-4');
                                        newMessage.innerHTML += `
                                           <div>
                                              <img src="~/img/NoAvatarProfileImage.png" class="rounded-circle mr-1 img-sm" alt="Avatar">
                                              <div class="text-muted small text-nowrap mt-2">${message.sendedOn}</div>
                                            </div>
                                            <div class="flex-shrink-1 bg-light rounded py-2 px-3 mr-3">
                                                <div class="font-weight-bold mb-1">${message.fromUsername}</div>
                                                ${message.content}
                                            </div>`;
                                    }

                                    let firstMessage = document.getElementById('message-list').firstChild;
                                    document.getElementById('message-list').insertBefore(newMessage, firstMessage);
                                }

                                let scroll = document.getElementById('chat-body');
                                let newScrollTop = scroll.scrollHeight - oldScrollHeight;
                                scroll.scrollTop = newScrollTop;
                            }
                        },
                        error: function (msg) {
                            console.error(msg);
                        }
                    });
                }
            }
        });
    });

    function scrollChatToBottom() {
        $('#chat-body').animate({
            scrollTop: document.getElementById('chat-body').scrollHeight
        }, 800);
    }
</script>
}