@model NotificationModel

@{
    string username = this.User.Identity.Name;
    ViewData["Title"] = $"{username} известия";
    var colors = new Dictionary<string, string>()
    {
        { NotificationStatus.Прочетено.ToString(), "green" },
        { NotificationStatus.Непрочетено.ToString(), "red" },
        { NotificationStatus.Запазено.ToString(), "blue" },
    };
}

@section Styles{
<style>
    body {
        margin-top: 20px;
        background-color: #f0f2f5;
    }

    .dropdown-list-image {
        position: relative;
        height: 2.5rem;
        width: 2.5rem;
    }

        .dropdown-list-image img {
            height: 2.5rem;
            width: 2.5rem;
        }

    .btn-light {
        color: #2cdd9b;
        background-color: #e5f7f0;
        border-color: #d8f7eb;
    }
</style>
}
@if (!Model.Notifications.Any())
{
    <h3 style="margin-top:2%">
        Нямате известия
    </h3>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-lg-12 center">
                <div class="box shadow-sm rounded bg-white mb-3">
                    <div class="box-title border-bottom p-3">
                        <h6 class="m-0">Вашите известия</h6>
                    </div>

                    <div class="box-body p-0" id="all-user-notifications">
                        @foreach (var notification in Model.Notifications)
                        {
                            <div id="@notification.Id" class="p-3 d-flex align-items-center bg-light border-bottom osahan-post-header">
                                <div class="dropdown-list-image mr-3">
                                    <img class="rounded-circle" src="@notification.ImageUrl" alt="avatar" />
                                </div>
                                <div class="font-weight-bold mr-3">
                                    <span>
                                        <button class="mdi mdi-delete" onclick="deleteNotification('@notification.Id')">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </span>
                                    <div class="text-truncate">@Html.Raw(notification.Heading)</div>
                                    <div class="small">@notification.Text</div>
                                </div>
                                <span class="ml-auto mb-auto">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-light btn-sm rounded" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            @foreach (var status in notification.AllStatuses)
                                            {
                                                <button class="dropdown-item" type="button" onclick="updateStatus('@status', '@notification.Id')">@status</button>
                                            }
                                            <span>Статус: </span>
                                            <b>
                                                <span id="@(notification.Id)orderStatus" style="color: @colors[notification.Status.ToString()]; text-transform: uppercase">
                                                    @notification.Status.ToString()
                                                </span>
                                            </b>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="text-right text-muted pt-1">@notification.CreatedOn</div>
                                </span>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row" style="text-align: center">
        <button id="loadMoreNotifications" type="button" class="btn btn-success" onclick="loadMoreNotifications(@NotificationOnClick, false)" @(Model.IsLessThanDefaultCount == false ? "disabled" : "")>
            <i class="fas fa-plus"></i> Покажи повече
        </button>
        <button id="loadLessNotifications" type="button" class="btn btn-danger" style="display: none" onclick="hideNotifications(@NotificationOnClick)">
            <i class="fas fa-minus"></i> Покажи по-малко
        </button>
    </div>
    <input type="hidden" />
}

@section Scripts{
    @*<script type="text/javascript" src="~/js/notificationActions.js"></script>*@
<script>
    let savedNotificationsForHide = [];

    function updateStatus(newStatus, id) {
        let colors = {
            'Прочетено': 'green',
            'Непрочетено': 'red',
            'Запазено': 'blue'
        };

        $.ajax({
            type: 'POST',
            url: `/Notification/EditStatus`,
            data: {
                'newStatus': newStatus,
                'id': id
            },
            headers: {
                'X-CSRF-TOKEN':
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (data) {
                if (data) {
                    document.getElementById(`${id}orderStatus`).innerText = newStatus;
                    document.getElementById(`${id}orderStatus`).style.color = colors[newStatus];
                }
            },
            error: function (msg) {
                console.error(msg);
            }
        });
    }

    function deleteNotification(id) {
        $.ajax({
            type: 'POST',
            url: `/Notification/DeleteNotification`,
            data: {
                'id': id
            },
            headers: {
                'X-CSRF-TOKEN':
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (data) {
                if (data) {
                    let notification = document.getElementById(id);
                    document.getElementById(`all-user-notifications`).removeChild(notification);
                    loadMoreNotifications(1, true);
                }
            },
            error: function (msg) {
                console.error(msg);
            }
        });
    }

    function createNotification(notification) {
        let newNotification = document.createElement('div');
        newNotification.classList.add('p-3', 'd-flex', 'align-items-center', 'bg-light', 'border-bottom', 'osahan-post-header');
        newNotification.id = notification.id;

        let allStatuses = '';

        for (var status of notification.allStatuses) {
            allStatuses += `<a onclick="updateStatus('${status}', '${notification.id}')">${status}</a>`;
        }

        newNotification.innerHTML =
            `<div class="dropdown-list-image mr-3">
                                    <img class="rounded-circle" src="${notification.ImageUrl}" alt="avatar" />
                                </div>
                                <div class="font-weight-bold mr-3">
                                    <span>
                                        <a class="mdi mdi-delete" onclick="deleteNotification('${notification.Id}')">
                                            <i class="fas fa-trash-alt"></i>
                                        </a>
                                    </span>
                                    <div class="text-truncate">${notification.Heading}</div>
                                    <div class="small">${notification.Text}</div>
                                </div>
                                <span class="ml-auto mb-auto">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-light btn-sm rounded" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            ${allStatuses}
                                            <span>Статус: </span>
                                            <b>
                                                <span id="${notification.Id}orderStatus" style="color: red; text-transform: uppercase">
                                                    ${notification.allStatuses[notification.status - 1]}
                                                </span>
                                            </b>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="text-right text-muted pt-1">${notification.CreatedOn}</div>
                                </span>`;

        return newNotification;
    }

    function loadMoreNotifications(take, isForDeleted) {
        let skip = document.getElementById("all-user-notifications").children.length;
        let div = document.getElementById("all-user-notifications");

        $.ajax({
            type: "GET",
            url: `/Notification/GetMoreNotitifications`,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            data: {
                "skip": skip,
                "take": take
            },
            headers: {
                RequestVerificationToken:
                    $('input:hidden[name="__RequestVerificationToken"]').val()
            },
            success: function (data) {
                for (var notification of data.newNotifications) {
                    let result = createNotification(notification);
                    div.appendChild(result);
                }
                if (!data.hasMore) {
                    document.getElementById("loadMoreNotifications").disabled = true;
                }
                if (isForDeleted) {
                    document.getElementById("loadLessNotifications").style.display = "none";
                } else {
                    document.getElementById("loadLessNotifications").style.display = "";
                }
            },
            error: function (msg) {
                console.error(msg);
            }
        });
    }

    function hideNotifications(maxCount) {
        let div = document.getElementById("all-user-notifications");

        for (var i = 0; i < Math.min(maxCount, div.children.length % maxCount + div.children.length / maxCount); i++) {
            div.removeChild(div.lastChild);
        }

        if (div.children.length <= maxCount) {
            document.getElementById("loadLessNotifications").style.display = "none";
        }

        document.getElementById("loadMoreNotifications").disabled = false;
    }
</script>
}