@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Antiforgery
@model CreateAppointmentModel

@{
    var requestToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
}

@section head{
<link href='~/lib/fullcallendar/main.css' rel='stylesheet' />
<link href='~/lib/fontawesome/css/all.min.css' rel='stylesheet'>
<script src='~/lib/fullcallendar/main.js'></script>

<style type="text/css">
    body {
        background-image: url('/img/edit.png');
        background-repeat: no-repeat;
        background-position: center;
        background-size: cover;
    }
</style>
}

@{
    var userIsDoctor = this.User.IsInRole(DoctorRoleName);
}

<input id="RequestVerificationToken" type="hidden" value="@requestToken" />

<div id="calendar"></div>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="title"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="details">
                <form id="form" method="post" enctype="multipart/form-data">
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label" style="font-size:20px">Име</label>
                        <div class="col-sm-10">
                            <div id="selectedTime" asp-for="@Model.ParentFirstName" class="form-control" hidden></div>
                            <input asp-for="@Model.ParentFirstName" value="" class="form-control" required/>
                            <span asp-validation-for="ParentFirstName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label" style="font-size:20px">Фамилия</label>
                        <div class="col-sm-10">
                            <div id="selectedTime" asp-for="@Model.ParentLastName" class="form-control" hidden></div>
                            <input asp-for="@Model.ParentLastName" value="" class="form-control" required/>
                            <span asp-validation-for="ParentLastName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label" style="font-size:20px">Име на дете</label>
                        <div class="col-sm-10">
                            <div id="selectedTime" asp-for="@Model.ChildFirstName" class="form-control" hidden></div>
                            <input asp-for="@Model.ChildFirstName" value="" class="form-control" required/>
                            <span asp-validation-for="ChildFirstName" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label" style="font-size:20px">Вид преглед</label>
                        <div class="col-sm-10">
                            <select asp-for="AppointmentCause" class="form-control">
                                <option value="Първичен преглед">Първичен преглед</option>
                                <option value="Вторичен преглед">Вторичен преглед</option>
                                <option value="Детско здравеопазване">Детско здравеопазване</option>
                                <option value="Свободен прием">Свободен прием</option>
                            </select>
                        </div>
                        <span asp-validation-for="AppointmentCause" class="small text-danger"></span>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-4 col-form-label" style="font-size:20px">Тел. номер</label>
                        <div class="col-sm-10">
                            <div id="selectedTime" asp-for="@Model.PhoneNumber" class="form-control" hidden></div>
                            <input asp-for="@Model.PhoneNumber" value="" class="form-control" required/>
                            <span asp-validation-for="PhoneNumber" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="saveBtn" class="btn btn-primary hvr-grow">Запази час</button>
                        <button type="button" class="btn btn-secondary hvr-grow" data-dismiss="modal">Затвори</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    document.addEventListener('DOMContentLoaded', async function() {
        let events = await attachEvents();

        let calendar = generateCalendar(events);

        calendar.render();

        function generateCalendar(events) {
            const calendarEl = document.getElementById('calendar');
            let calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridWeek',
                slotDuration: '00:05:00',
                firstDay: 1,
                allDaySlot: false,
                nowIndicator: true,
                themeSystem: 'bootstrap',
                headerToolbar: {
                    center: 'title',
                    end: 'prev,next today',
                    start: '',
                },
                buttonText: {
                  today: 'днес',
                },
                bootstrapFontAwesome: {
                    prev: 'fas fa-arrow-circle-left',
                    next: 'fas fa-arrow-circle-right'
                },
                locale: 'bg',
                slotMinTime:'08:00',
                slotMaxTime:'20:00',
                businessHours: {
                    daysOfWeek: [ 1, 5 ],
                    startTime: '09:00',
                    endTime: '14:00'
                  },
                events: events,
                eventTimeFormat: {
                      hour: '2-digit',
                      minute: '2-digit',
                      meridiem: false,
                      hour12: false
                },
                eventColor: '#378006',
                eventDisplay: 'block',
                eventClick: function(info) {
                    let startStr = new Date(info.event.startStr).toLocaleTimeString();
                    let endStr = new Date(info.event.endStr).toLocaleTimeString();
                    let date = new Date(info.event.startStr).toLocaleDateString();

                    const headerSpan = document.getElementById('title');
                    headerSpan.textContent = info.event.title + ': ' + startStr + '-' + endStr + ' ' + date;

                    const form = document.getElementById('form');
                    form.addEventListener('submit', onSubmit);

                    $('#modal').modal();
                }
              });

              return calendar;
          }

        async function onSubmit(ev) {
            ev.preventDefault();
            
            const form = new FormData(ev.target);
            const parentFirstName = form.get('ParentFirstName').trim();
            const parentLastName = form.get('ParentLastName').trim();
            const childFirstName = form.get('ChildFirstName').trim();
            const appointmentCause = form.get('AppointmentCause');
            const phoneNumber = form.get('PhoneNumber').trim();

            if(parentFirstName == '' || parentLastName == '' || childFirstName == '' || phoneNumber == '') {
                return notify("Всички полета са задължителни");
            }

            const data = {
                parentFirstName,
                parentLastName,
                childFirstName,
                appointmentCause,
                phoneNumber
            };

            console.log(data);
        }

        async function attachEvents() {
            let events = [];
            const response = await fetch('/calendar/appointments', {
                method: 'Get'
            });

            var eventObjs = await response.json();

            Object.values(eventObjs).forEach(x => {
                events.push({
                    id: x.id,
                    title: x.status,
                    start: x.start,
                    end: x.end,
                    allDay: false,
                });
            });

            let slots = await getSlots();

            Object.values(slots).forEach(x => {
                events.push({
                    id: x.id,
                    title: x.status,
                    start: x.start,
                    end: x.end
                });
            });

            return events;
        }

        async function getSlots() {
            const response = await fetch('/calendar/getSlots')

            const slots = await response.json();

            return slots;
        }

        function notify(msg) {
            const element = document.getElementById('errorBox');
            const output = element.querySelector('span');
            output.textContent = msg;
            element.style.display = 'block';

            setTimeout(() => element.style.display = 'none', 3000);
        }
    });
</script>