/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/adapterjs@0.15.4/tests/unit/RTCPeerConnection.param.spec.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var expect=chai.expect,assert=chai.assert,should=chai.should,testTimeout=35e3,gUMTimeout=25e3,testItemTimeout=2e3;describe("RTCPeerConnection | Parameters",(function(){this.timeout(testTimeout),before((function(e){this.timeout(testItemTimeout),AdapterJS.webRTCReady((function(){e()}))})),it("new RTCPeerConnection() -> Error",(function(){this.timeout(testItemTimeout),expect((function(){new RTCPeerConnection})).to.throw(Error)})),it("new RTCPeerConnection(null) -> Error",(function(){this.timeout(testItemTimeout),expect((function(){new RTCPeerConnection(null)})).to.throw(Error)})),it("new RTCPeerConnection({}) -> undefined",(function(){this.timeout(testItemTimeout),expect((function(){new RTCPeerConnection({})})).to.not.throw(Error)})),it("new RTCPeerConnection({}, null) -> undefined",(function(){this.timeout(testItemTimeout),expect((function(){new RTCPeerConnection({},null)})).to.not.throw(Error)})),it("new RTCPeerConnection({}, {}) -> undefined",(function(){this.timeout(testItemTimeout),expect((function(){new RTCPeerConnection({},{})})).to.not.throw(Error)})),it("new RTCPeerConnection(null, null) -> undefined",(function(){this.timeout(testItemTimeout),expect((function(){new RTCPeerConnection(null,null)})).to.not.throw(Error)}))}));
//# sourceMappingURL=/sm/db7256d745d8f3e62288a65da3eac3ed248aba0ce27e21a16b73a4d6a00b2001.map