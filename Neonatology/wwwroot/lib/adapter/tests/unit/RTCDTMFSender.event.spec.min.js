/**
 * Minified by jsDelivr using Terser v5.10.0.
 * Original file: /npm/adapterjs@0.15.4/tests/unit/RTCDTMFSender.event.spec.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
var expect=chai.expect,assert=chai.assert,should=chai.should,testTimeout=3500,gUMTimeout=5e3,testItemTimeout=2e3;describe("RTCDTMFSender | event",(function(){this.timeout(testTimeout);var e=null,t=null,n=null,i=null;before((function(e){this.timeout(testItemTimeout),AdapterJS.webRTCReady((function(){window.navigator.getUserMedia({audio:!0,video:!1},(function(t){stream=t,n=stream.getAudioTracks()[0],e()}),(function(e){throw e}))}))})),beforeEach((function(o){this.timeout(gUMTimeout),e=new RTCPeerConnection({iceServers:[]}),t=new RTCPeerConnection({iceServers:[]}),e.oniceconnectionstatechange=function(t){e&&"connected"===e.iceConnectionState&&(i=e.createDTMFSender(n),o())},e.addStream(stream),connect(e,t)})),afterEach((function(n){e.close(),t.close(),e=null,t=null,i=null,n()})),it("RTCDTMFSender.ontonechange :: emit",(function(e){this.timeout(testItemTimeout);i.ontonechange=function(t){assert.isNotNull(t,"Event argument missing"),assert.isNotNull(t.target,"Event target missing"),assert.isNotNull(t.currentTarget,"Event currentTarget missing"),assert.isNotNull(t.srcElement,"Event srcElement missing"),assert.isNotNull(t.tone,"Event tone missing"),assert.equal(t.tone,"8","Wrong tone sent"),e()},i.insertDTMF("8",100,100)}))}));
//# sourceMappingURL=/sm/57f3d77e452097e7dadfef115e1a9020e00b36d5061816d70c7dc6e12e45f9a7.map